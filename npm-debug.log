0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish', '.' ]
2 info using npm@3.10.10
3 info using node@v6.11.2
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/ugurdogrusoz/sbgnviz.js',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/ugurdogrusoz/.npm/sbgnviz/4.0.2/package.tgz not in flight; packing
9 verbose correctMkdir /Users/ugurdogrusoz/.npm correctMkdir not in flight; initializing
10 info lifecycle sbgnviz@4.0.2~prepublish: sbgnviz@4.0.2
11 silly lifecycle sbgnviz@4.0.2~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/ugurdogrusoz/.npm/sbgnviz/4.0.2/package.tgz',
12 verbose tar pack   '/Users/ugurdogrusoz/sbgnviz.js' ]
13 verbose tarball /Users/ugurdogrusoz/.npm/sbgnviz/4.0.2/package.tgz
14 verbose folder /Users/ugurdogrusoz/sbgnviz.js
15 verbose addLocalTarball adding from inside cache /Users/ugurdogrusoz/.npm/sbgnviz/4.0.2/package.tgz
16 verbose correctMkdir /Users/ugurdogrusoz/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd sbgnviz@4.0.2
18 verbose afterAdd /Users/ugurdogrusoz/.npm/sbgnviz/4.0.2/package/package.json not in flight; writing
19 verbose correctMkdir /Users/ugurdogrusoz/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/ugurdogrusoz/.npm/sbgnviz/4.0.2/package/package.json written
21 silly publish { name: 'sbgnviz',
21 silly publish   version: '4.0.2',
21 silly publish   description: 'SBGNPD visualization library',
21 silly publish   main: 'src/index.js',
21 silly publish   licence: 'LGPL-3.0',
21 silly publish   scripts:
21 silly publish    { test: 'echo "Error: no test specified" && exit 1',
21 silly publish      'build-sbgnviz-js': 'gulp build',
21 silly publish      'debug-js': 'nodemon -e js --watch src -x "npm run build-sbgnviz-js"' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/iVis-at-Bilkent/sbgnviz.js.git' },
21 silly publish   bugs: { url: 'https://github.com/iVis-at-Bilkent/sbgnviz.js/issues' },
21 silly publish   homepage: 'https://github.com/iVis-at-Bilkent/sbgnviz.js/',
21 silly publish   peerDependencies:
21 silly publish    { jquery: '^2.2.4',
21 silly publish      filesaverjs: '~0.2.2',
21 silly publish      cytoscape: 'iVis-at-Bilkent/cytoscape.js#unstable' },
21 silly publish   dependencies:
21 silly publish    { 'libsbgn.js': '^0.1.1',
21 silly publish      'pretty-data': '^0.40.0',
21 silly publish      xml2js: '^0.4.17' },
21 silly publish   devDependencies:
21 silly publish    { browserify: '^11.2.0',
21 silly publish      gulp: '^3.9.1',
21 silly publish      'gulp-derequire': '^2.1.0',
21 silly publish      'gulp-jshint': '^1.11.2',
21 silly publish      'gulp-prompt': '^0.1.2',
21 silly publish      'gulp-replace': '^0.5.4',
21 silly publish      'gulp-shell': '^0.5.0',
21 silly publish      'gulp-util': '^3.0.6',
21 silly publish      'jshint-stylish': '^2.0.1',
21 silly publish      'node-notifier': '^4.3.1',
21 silly publish      'run-sequence': '^1.1.4',
21 silly publish      'vinyl-buffer': '^1.0.0',
21 silly publish      'vinyl-source-stream': '^1.1.0' },
21 silly publish   readme: '# SBGNViz version 3\n\nSBGNViz is a web application based on [Cytoscape.js](http://cytoscape.github.io/cytoscape.js/) to visualize the pathway models represented by [SBGN](http://www.sbgn.org) Process Description (PD) and Activity Flow (AF) Notation. It accepts the pathway models represented in [SBGN-ML](https://github.com/sbgn/sbgn/wiki/LibSBGN) format.\n\n## Software\n\nSBGNViz is distributed under [GNU Lesser General Public License](http://www.gnu.org/licenses/lgpl.html). \n\n**A sample application using SBGNViz** can be found [here](http://cs.bilkent.edu.tr/~ivis/SBGNViz_sample_app/). The sample application source codes are available [here](https://github.com/iVis-at-Bilkent/sbgnviz.js-sample-app)\n\nPlease cite the following when you use SBGNViz.js:\n\nM. Sari, I. Bahceci, U. Dogrusoz, S.O. Sumer, B.A. Aksoy, O. Babur, E. Demir, "[SBGNViz: a tool for visualization and complexity management of SBGN process description maps](http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0128985)", PLoS ONE, 10(6), e0128985, 2015.\n\n## Default Options\n```javascript\n    var options = {\n      // The path of core library images when sbgnviz is required from npm and the index html \n      // file and node_modules are under the same folder then using the default value is fine\n      imgPath: \'node_modules/sbgnviz/src/img\',\n      // Whether to fit labels to nodes\n      fitLabelsToNodes: function () {\n        return false;\n      },\n      // Whether to fit labels to a node\'s info boxes\n      fitLabelsToInfoboxes: function () {\n        return false;\n      },\n      // dynamic label size it may be \'small\', \'regular\', \'large\'\n      dynamicLabelSize: function () {\n        return \'regular\';\n      },\n      // percentage used to calculate compound paddings\n      compoundPadding: function () {\n        return 10;\n      },\n      // The selector of the component containing the sbgn network\n      networkContainerSelector: \'#sbgn-network-container\',\n      // Whether the actions are undoable, requires cytoscape-undo-redo extension\n      undoable: true\n    };\n```\n\n## SBGNViz Specific Data\n```javascript\n// Nodes specific data.\nnode.data(\'id\'); // Id of a node. (Specific to cytoscape.js)\nnode.data(\'label\'); // Label of a node.\nnode.data(\'parent\'); // Parent id of a node. (Specific to cytoscape.js)\n// SBGN specific class of a node. If it ends with \'multimer\' it means that this node is a multimer.\nnode.data(\'class\');\nnode.data(\'clonemarker\'); // Whether the node is cloned.\nnode.data(\'bbox\'); // Bounding box of a node includes bbox.x, bbox.y, bbox.w, bbox.h\n// Ports list of a node. A node port includes port.id, port.x, port.y where port.x and port.y are\n// percentages relative to node position and size.\nnode.data(\'ports\');\nnode.data(\'statesandinfos\'); // a list of UnitOfInformation and StateVariable objects\n// an object containing 0 to 4 keys (top, bottom, left, right) pointing to AuxUnitLayout objects\nnode.data(\'auxunitlayouts\');\n\n// Edges specific data.\nedge.data(\'id\'); // Id of an edge. (Specific to cytoscape.js)\nedge.data(\'source\'); // Id of source node. (Specific to cytoscape.js)\nedge.data(\'target\'); // Id of target node. (Specific to cytoscape.js)\nedge.data(\'class\'); // SBGN specific class of an edge.\nedge.data(\'cardinality\'); // SBGN cardinality of an edge.\n// The following is set if the edge is connected to its source node by a specific port of that node.\nedge.data(\'portsource\');\n// The following is set if the edge is connected to its target node by a specific port of that node.\nedge.data(\'porttarget\');\n// Bend point positions of an edge. Includes x and y coordinates. This data is to be passed to\n// edgeBendEditing extension.\nedge.data(\'bendPointPositions\');\n```\n\n## API\n\n`sbgnviz.expandNodes(nodes)`\nExpand given nodes. Requires expandCollapse extension and considers undoable option.\n\n`sbgnviz.collapseNodes(nodes)`\nCollapse given nodes. Requires expandCollapse extension and considers undoable option.\n\n`sbgnviz.expandComplexes()`\nExpands the complex nodes in the graph recursively. Requires expandCollapse extension and considers undoable option.\n\n`sbgnviz.collapseComplexes()`\nCollapses the complex nodes in the graph recursively. Requires expandCollapse extension and considers undoable option.\n\n`sbgnviz.collapseAll()`\nCollapses all nodes in the graph recursively. Requires expandCollapse extension and considers undoable option.\n\n`sbgnviz.expandAll()`\nExpands all nodes in the graph recursively. Requires expandCollapse extension and considers undoable option.\n\n`sbgnviz.hideNodesSmart(nodes)`\nExtends the given nodes list in a smart way to leave the map intact and hides the resulting list. Requires viewUtilities extension and considers \'undoable\' option.\n\n`sbgnviz.showNodesSmart(nodes)`\nExtends the given nodes list in a smart way to leave the map intact. Then unhides the resulting list and hides others. Requires viewUtilities extension and considers \'undoable\' option.\n\n`sbgnviz.showAll()`\nUnhides all elements. Requires viewUtilities extension and considers \'undoable\' option.\n\n`sbgnviz.deleteElesSimple(eles)`\nRemoves the given elements in a simple way. Considers \'undoable\' option.\n\n`sbgnviz.deleteNodesSmart(nodes)`\nExtends the given nodes list in a smart way to leave the map intact and removes the resulting list. Considers \'undoable\' option.\n\n`sbgnviz.highlightSelected(eles)`\nHighlights selected elements. Requires viewUtilities extension and considers \'undoable\' option.\n\n`sbgnviz.highlightNeighbours(nodes)`\nHighlights neighbours of the given nodes. Requires viewUtilities extension and considers \'undoable\' option.\n\n`sbgnviz.highlightProcesses(nodes)`\nHighlights processes of the given nodes. Requires viewUtilities extension and considers \'undoable\' option.\n\n`sbgnviz.searchByLabel(label)`\nFinds the elements whose label includes the given label and highlights processes of those elements.\nRequires viewUtilities extension and considers \'undoable\' option.\n\n`sbgnviz.removeHighlights()`\nUnhighlights any highlighted element. Requires viewUtilities extension and considers \'undoable\' option.\n\n`sbgnviz.performLayout(layoutOptions, notUndoable)`\nPerforms layout by given layoutOptions. Considers \'undoable\' option. However, by setting notUndoable parameter\nto a truthy value you can force an undable layout operation independant of \'undoable\' option.\n\n`sbgnviz.createSbgnml()`\nCreates an sbgnml file content from the exising graph and returns it.\n\n`sbgnviz.convertSbgnmlToJson(data)`\nConverts given sbgnml data to a json object in a special format (http://js.cytoscape.org/#notation/elements-json) and returns it.\n\n`sbgnviz.getQtipContent(node)`\nCreate the qtip contents of the given node and returns it.\n\n`sbgnviz.updateGraph(cyGraph)`\nUpdate the graph by given cyGraph parameter which is a json object including data of cytoscape elements \nin a special format (http://js.cytoscape.org/#notation/elements-json).\n\n`sbgnviz.calculatePaddings(paddingPercent)`\nCalculates the paddings for compounds based on dimensions of simple nodes and a specific percentadge.\nAs this percentadge takes the given paddingPercent or compoundPadding option.\n\n`sbgnviz.recalculatePaddings()`\nRecalculates/refreshes the compound paddings. Aliases `sbgnviz.refreshPaddings()`.\n\n`sbgnviz.saveAsPng(filename)`\nExports the current graph to a png file. The name of the file is determined by the filename parameter which is \n\'network.png\' by default.\n\n`sbgnviz.saveAsJpg(filename)`\nExports the current graph to a jpg file. The name of the file is determined by the filename parameter which is \n\'network.jpg\' by default.\n\n`sbgnviz.loadSample(filename, folderpath)`\nLoads a sample file whose name and path of containing folder is given.\n\n`sbgnviz.loadSBGNMLFile(file[, callback])`\nLoads the given sbgnml file. Optionally apply a callback function upon loading. Callback accepts the file as an xml string as argument.\n\n`loadSBGNMLText(textData)`\nLoads a graph from the given text data in sbgnml format.\n\n`sbgnviz.saveAsSbgnml(filename)`\nExports the current graph to an sbgnml file with the given filename.\n\n`sbgnviz.enablePorts()`\nEnable node ports.\n\n`sbgnviz.disablePorts()`\nDisable node ports.\n\n`sbgnviz.arePortsEnabled()`\nGet if node ports are enabled.\n\n`sbgnviz.setPortsOrdering(nodes, ordering, portDistance)`\nSets the ordering of the given nodes. Ordering options are \'L-to-R\', \'R-to-L\', \'T-to-B\', \'B-to-T\', \'none\'.\nIf a node does not have any port before the operation and it is supposed to have some after operation the portDistance parameter is used to set the distance between the node center and the ports. The default port distance is 70.\nConsiders undoable option.\n\n`sbgnviz.startSpinner(classname)`\nStarts a spinner at the middle of network container element. You can specify a css class that the \nspinner will have. The default classname is \'default-class\'. Requires \'fontawesome.css\'.\n\n`sbgnviz.endSpinner(classname)`\nEnds any spinner having a css class with the given name. Requires \'fontawesome.css\'.\n\n`sbgnviz.elementUtilities`\nGeneral and sbgn specific utilities for cytoscape elements. These are exposed for the users who builds an extension\nlibrary of sbgnviz. Most users will not need to use this. It includes the followings.\n\n * `getTopMostNodes(nodes)` This method returns the nodes non of whose ancestors is not in given nodes.\n * `allHaveTheSameParent(nodes)` This method checks if all of the given nodes have the same parent assuming that the size of  nodes is not 0.\n * `moveNodes(positionDiff, nodes)` This method moves given nodes by the given position difference.\n * `convertToModelPosition(renderedPosition)` This method calculates the modal position of the given rendered position by considering current the pan and zoom level of the graph.\n * `getProcessesOfSelected()` Returns the processes of the selected nodes.\n * `getNeighboursOfSelected()` Returns the neighbours of the selected nodes.\n * `getNeighboursOfNodes(nodes)` Returns the neighbours of the given nodes.\n * `getProcessesOfNodes(nodes)` Extends the given nodes list in a smart way to leave the map intact and returns the resulting list. Aliases `extendNodeList`.\n * `noneIsNotHighlighted()` Returns true if there is no element having \'unhighlighted\' class.\n * `deleteNodesSmart(nodes)` Extends the given nodes list in a smart way to leave the map intact and removes the resulting list.\n * `deleteElesSimple` Removes the given elements in a simple way.\n * `getPortsOrdering` Return ordering of ports of a node. Possible return values are \'L-to-R\', \'R-to-L\', \'T-to-B\', \'B-to-T\', \'none\'.\n * `canHavePorts` Returns whether the given element or elements with the given class can have ports\n * `setPortsOrdering(nodes, ordering, portDistance)` Similar to `sbgnviz.setPortsOrdering()` but do not considers undoable option.\n \n\n`sbgnviz.undoRedoActionFunctions`\nFunctions to be utilized in defining new actions for cytoscape.js-undo-redo extension. These are exposed for the users who builds\nan extension library of sbgnviz.\n\n * `deleteElesSimple(param)` Do/Redo function for \'deleteElesSimple\' undo redo command.\n * `deleteNodesSmart(param)` Do/Redo function for \'deleteNodesSmart\' undo redo command.\n * `restoreEles(eles)` Undo function for \'deleteElesSimple\' and \'deleteNodesSmart\' undo redo commands.\n * `setPortsOrdering(param)` Do/Undo/Redo function for \'setPortsOrdering\' undo redo command.\n\n### Classes\n\nThe following describes objects used by sbgnviz.js and accessible through `sbgnviz.classes`.\n\n#### AuxiliaryUnit\n\n```javascript\nstateorinfobox.id;\nstateorinfobox.parent; // points to the cytoscape parent node\nstateorinfobox.clazz; // \'unit of information\' or \'state variable\'\nstateorinfobox.bbox; // includes bbox.x, bbox.y, bbox.w, bbox.h\n```\n\n#### StateVariable\n\n```javascript\nstateVariable.state; // includes state.value and state.variable\n```\n\n#### UnitOfInformation\n\n```javascript\nunitOfInformation.label; // includes label.text\n```\n\n#### AuxUnitLayout\n\n```javascript\n\n// instance variables\nauxUnitLayout.units // list of StateVariable or UnitOfInformation\nauxUnitLayout.location // top, bottom, left, right\nauxUnitLayout.parentNode // link to cytoscape parent node\n\n// instance methods\n// add an auxiliary unit to this layout, optionnally inserting it at a given position\nauxUnitLayout.addAuxUnit(unit [,position]);\n// remove an auxiliary unit from this layout\nauxUnitLayout.removeAuxUnit(unit);\n\n// class variables\n// those options can be defined for each instance individually. If no value is found for an\n// instance, then the class\' value is used.\nAuxUnitLayout.outerMargin = 10;\nAuxUnitLayout.unitGap = 5;\nAuxUnitLayout.alwaysShowAuxUnits = false;\nAuxUnitLayout.maxUnitDisplayed = 4;\n\n```\n\n#### EntityType\n\n#### StateVariableDefinition\n\n\n## Events\n`$(document).on(\'sbgnvizLoadSampleStart\', function(event, filename) { ... });` Triggered when a sample is being loaded. Aliases `sbgnvizLoadSample`.\n\n`$(document).on(\'sbgnvizLoadFileStart\', function(event, filename) { ... });` Triggered when an external sbgnml file is being loaded. Aliases `sbgnvizLoadFile`.\n\n`$(document).on(\'sbgnvizLoadSampleEnd\', function(event, filename) { ... });` Triggered when a sample is loaded\n\n`$(document).on(\'sbgnvizLoadFileEnd\', function(event, filename) { ... });` Triggered when an external sbgnml file is loaded\n\n`$(document).on(\'updateGraphStart\', function(event) { ... });` Triggered when the graph update is just started\n\n`$(document).on(\'updateGraphEnd\', function(event) { ... });` Triggered when the graph update is ended\n\n## Dependencies\n\n * cytoscape (iVis-at-Bilkent/cytoscape.js#unstable)\n * jQuery ^2.2.4\n * filesaverjs ~0.2.2\n\n## Optional Dependencies\nThe following extensions are used by this library if they are registered.\n * cytoscape-undo-redo ^1.2.1\n * cytoscape-expand-collapse ^3.0.0\n * cytoscape-edge-bend-editing ^1.4.0\n * cytoscape-view-utilities ^2.0.0\n\n\n## Usage instructions\nDownload the library:\n * via npm: `npm install cytoscape-expand-collapse` or\n * via direct download in the repository (probably from a tag).\n\n`require()` the library as appropriate for your project:\n\nCommonJS:\n```js\nvar sbgnviz = require(\'sbgnviz\');\nvar cytoscape = require(\'cytoscape-for-sbgnviz\');\nvar jQuery = require(\'jQuery\');\nvar filesaverjs = require(\'filesaverjs\');\n\nvar options = {\n};\n\nvar libs = {\n    cytoscape: cytoscape,\n    jQuery: jQuery,\n    filesaverjs: filesaverjs\n};\n\nsbgnviz( options, libs );\n```\n\nIn plain JS you do not need to require the libraries you just need to register sbgnviz with the options.\n\n## Publishing instructions\n\nThis project is set up to automatically be published to npm.  To publish:\n\n1. Set the version number environment variable: `export VERSION=1.2.3`\n2. Publish: `gulp publish`\n\n## Credits\n\nThanks to JetBrains for an [Open Source License](https://www.jetbrains.com/buy/opensource/)\n\n## Team\n\n  * [Ilkin Safarli](https://github.com/kinimesi), [Hasan Balci](https://github.com/hasanbalci), [Leonard Dervishi](https://github.com/leonarddrv), and [Ugur Dogrusoz](https://github.com/ugurdogrusoz) of [i-Vis at Bilkent University](http://www.cs.bilkent.edu.tr/~ivis), [Metin Can Siper](https://github.com/metincansiper) of the Demir Lab at [OHSU](http://www.ohsu.edu/), and [Ludovic Roy](https://github.com/royludo) of [EISBM](http://eisbm.org)\n  \n#### Alumni\n\n  * Alper Karacelik, Selim Firat Yilmaz, Istemi Bahceci, Mecit Sari, Ayhun Tekat, M.Furkan Sahin\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: 'ac425639bcb8390fc39dc1a3b1cf5922779d0ee9',
21 silly publish   _id: 'sbgnviz@4.0.2',
21 silly publish   _shasum: 'f7efccd65cfeec594e8ca3b832eb72efb1fa5acd',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name sbgnviz
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'sbgnviz',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'sbgnviz',
26 silly mapToRegistry   name: 'sbgnviz',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/sbgnviz
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /Users/ugurdogrusoz/.npm/sbgnviz/4.0.2/package.tgz
30 verbose stack Error: auth required for publishing
30 verbose stack     at CachingRegistryClient.publish (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/publish.js:30:14)
30 verbose stack     at /usr/local/lib/node_modules/npm/lib/publish.js:138:14
30 verbose stack     at mapToRegistry (/usr/local/lib/node_modules/npm/lib/utils/map-to-registry.js:62:3)
30 verbose stack     at publish_ (/usr/local/lib/node_modules/npm/lib/publish.js:107:3)
30 verbose stack     at Array.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/slide/lib/bind-actor.js:15:8)
30 verbose stack     at LOOP (/usr/local/lib/node_modules/npm/node_modules/slide/lib/chain.js:15:14)
30 verbose stack     at LOOP (/usr/local/lib/node_modules/npm/node_modules/slide/lib/chain.js:14:28)
30 verbose stack     at chain (/usr/local/lib/node_modules/npm/node_modules/slide/lib/chain.js:20:5)
30 verbose stack     at /usr/local/lib/node_modules/npm/lib/publish.js:73:5
30 verbose stack     at RES (/usr/local/lib/node_modules/npm/node_modules/inflight/inflight.js:23:14)
31 verbose cwd /Users/ugurdogrusoz/sbgnviz.js
32 error Darwin 16.7.0
33 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish" "."
34 error node v6.11.2
35 error npm  v3.10.10
36 error code ENEEDAUTH
37 error need auth auth required for publishing
38 error need auth You need to authorize this machine using `npm adduser`
39 verbose exit [ 1, true ]
